name: Terraform CI/CD

on:
  workflow_call:
    secrets:
      aws_identity_provider_role:
        description: "AWS IAM Role to assume for Terraform operations"
        required: true
    inputs:
      app_name:
        description: "Application Name"
        required: true
        type: string
      aws_region:
        description: "AWS Region for Terraform operations"
        required: true
        type: string
        default: "ap-south-1"
      command:
        description: "Command to execute: 'apply' or 'destroy'"
        required: true
        type: string
        default: apply
      tfvars_file_path:
        description: "Path to the Terraform variables file"
        required: true
        default: "variables.tfvars.json"
        type: string
      backend_bucket:
        description: "S3 bucket to store Terraform state files"
        required: false
        type: string

permissions:
  id-token: write

jobs:
  terraform_operations:
    name: "Terraform Operations"
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.aws_identity_provider_role }}
          aws-region: ${{ inputs.aws_region }}

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: Deployment-Terraform

      - name: Extract Artifact
        run: |
          mkdir -p Infrastructure
          echo "Extracting files from Deployment-Terraform.tar.gz"
          tar -xzf Deployment-Terraform.tar.gz -C Infrastructure
          echo "Extracted files to $(pwd)"
          ls -la Infrastructure

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
          
      - name: Terraform Init without s3 backend
        if: ${{ inputs.backend_bucket == '' }}
        working-directory: Infrastructure
        run: terraform init

      - name: Terraform Init with s3 backend
        if: ${{ inputs.backend_bucket != '' }}
        working-directory: Infrastructure
        run: |
          terraform init -backend-config="bucket=${{ inputs.backend_bucket }}" -backend-config="key=${{ inputs.app_name }}/terraform.tfstate" -backend-config="region=${{ inputs.aws_region }}" -backend-config="encrypt=true" -backend-config="use_lockfile=true"

      - name: Terraform Format
        working-directory: Infrastructure
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: Infrastructure
        run: terraform validate

      - name: Terraform Plan Apply
        working-directory: Infrastructure
        if: inputs.command == 'apply'
        run: terraform plan -out=tfplan -var-file="${{ inputs.tfvars_file_path }}"

      - name: Terraform Plan Destroy
        working-directory: Infrastructure
        if: inputs.command == 'destroy'
        run: terraform plan -out=tfplan -var-file="${{ inputs.tfvars_file_path }}" -destroy

      - name: Terraform Apply
        if: inputs.command == 'apply'
        working-directory: Infrastructure
        run: terraform apply -auto-approve tfplan

      - name: Terraform Destroy
        if: inputs.command == 'destroy'
        working-directory: Infrastructure
        run: terraform destroy -auto-approve tfplan
